{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ameetshrestha/Documents/WorkSpace/Exercises/globalCoVid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ameetshrestha/Documents/WorkSpace/Exercises/globalCoVid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ameetshrestha/Documents/WorkSpace/Exercises/globalCoVid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{withScriptjs,withGoogleMap,GoogleMap,Marker}from\"react-google-maps\";import{compose,withProps}from\"recompose\";import axios from\"axios\";var CoVidWorldMapComponent=compose(withProps({googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB7exZMUKU7pPZifDhZq1x3qplK1Cxk6AE&v=3.exp&libraries=geometry,drawing,places\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"53vh\"}}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}})}),withScriptjs,withGoogleMap)(function(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),country=_useState2[0],setCountry=_useState2[1];// Fetching API\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:\"GET\",url:\"https://corona.lmao.ninja/countries?fbclid=IwAR3mzozGuX74TDJ4YIJ-wTJgMW1Gzmdinq5-Qfqtad80LQuW2Hh1zdxfuUU\"});case 2:response=_context.sent;_context.next=5;return response.data;case 5:data=_context.sent;setCountry(data);case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}useEffect(function(){fetchData();},[]);return/*#__PURE__*/React.createElement(GoogleMap,{defaultZoom:4,defaultCenter:{lat:26.4831,lng:80.33333}},country.map(function(res,i){var countryInfo=res.countryInfo,cases=res.cases;var long=countryInfo.long,lat=countryInfo.lat,_id=countryInfo._id;return/*#__PURE__*/React.createElement(Marker,{key:_id,position:{lat:lat,lng:long}});}));});export default CoVidWorldMapComponent;","map":{"version":3,"sources":["/Users/ameetshrestha/Documents/WorkSpace/Exercises/globalCoVid19/src/component/CoVidWorldMapComponent.js"],"names":["React","useState","useEffect","withScriptjs","withGoogleMap","GoogleMap","Marker","compose","withProps","axios","CoVidWorldMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","country","setCountry","fetchData","method","url","response","data","lat","lng","map","res","i","countryInfo","cases","long","_id"],"mappings":"kiBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OACCC,YADD,CAECC,aAFD,CAGCC,SAHD,CAICC,MAJD,KAKO,mBALP,CAMA,OAAQC,OAAR,CAAiBC,SAAjB,KAAiC,WAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,sBAAsB,CAAGH,OAAO,CACrCC,SAAS,CAAC,CACTG,YAAY,CACX,+HAFQ,CAGTC,cAAc,cAAE,2BAAK,KAAK,CAAE,CAACC,MAAM,OAAP,CAAZ,EAHP,CAITC,gBAAgB,cAAE,2BAAK,KAAK,CAAE,CAACD,MAAM,OAAP,CAAZ,EAJT,CAKTE,UAAU,cAAE,2BAAK,KAAK,CAAE,CAACF,MAAM,OAAP,CAAZ,EALH,CAAD,CAD4B,CAQrCV,YARqC,CASrCC,aATqC,CAAP,CAU7B,UAAM,eACuBH,QAAQ,CAAC,EAAD,CAD/B,wCACAe,OADA,eACSC,UADT,eAGP;AAHO,QAIQC,CAAAA,SAJR,qIAIP,2KACwBT,CAAAA,KAAK,CAAC,CAC5BU,MAAM,CAAE,KADoB,CAE5BC,GAAG,CACF,0GAH2B,CAAD,CAD7B,QACOC,QADP,qCAMoBA,CAAAA,QAAQ,CAACC,IAN7B,QAMOA,IANP,eAOCL,UAAU,CAACK,IAAD,CAAV,CAPD,sDAJO,4CAcPpB,SAAS,CAAC,UAAM,CACfgB,SAAS,GACT,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACC,oBAAC,SAAD,EACC,WAAW,CAAE,CADd,CAEC,aAAa,CAAE,CAACK,GAAG,CAAE,OAAN,CAAeC,GAAG,CAAE,QAApB,CAFhB,EAIER,OAAO,CAACS,GAAR,CAAY,SAACC,GAAD,CAAMC,CAAN,CAAY,IACjBC,CAAAA,WADiB,CACKF,GADL,CACjBE,WADiB,CACJC,KADI,CACKH,GADL,CACJG,KADI,IAEjBC,CAAAA,IAFiB,CAECF,WAFD,CAEjBE,IAFiB,CAEXP,GAFW,CAECK,WAFD,CAEXL,GAFW,CAENQ,GAFM,CAECH,WAFD,CAENG,GAFM,CAGxB,mBACC,oBAAC,MAAD,EAAQ,GAAG,CAAEA,GAAb,CAAkB,QAAQ,CAAE,CAACR,GAAG,CAAEA,GAAN,CAAWC,GAAG,CAAEM,IAAhB,CAA5B,EADD,CAGA,CANA,CAJF,CADD,CAcA,CA1C8B,CAA/B,CA2CA,cAAepB,CAAAA,sBAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n\twithScriptjs,\n\twithGoogleMap,\n\tGoogleMap,\n\tMarker\n} from \"react-google-maps\";\nimport {compose, withProps} from \"recompose\";\nimport axios from \"axios\";\n\nconst CoVidWorldMapComponent = compose(\n\twithProps({\n\t\tgoogleMapURL:\n\t\t\t\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB7exZMUKU7pPZifDhZq1x3qplK1Cxk6AE&v=3.exp&libraries=geometry,drawing,places\",\n\t\tloadingElement: <div style={{height: `100%`}}/>,\n\t\tcontainerElement: <div style={{height: `53vh`}}/>,\n\t\tmapElement: <div style={{height: `100%`}}/>\n\t}),\n\twithScriptjs,\n\twithGoogleMap\n)(() => {\n\tconst [country, setCountry] = useState([]);\n\n\t// Fetching API\n\tasync function fetchData() {\n\t\tconst response = await axios({\n\t\t\tmethod: \"GET\",\n\t\t\turl:\n\t\t\t\t\"https://corona.lmao.ninja/countries?fbclid=IwAR3mzozGuX74TDJ4YIJ-wTJgMW1Gzmdinq5-Qfqtad80LQuW2Hh1zdxfuUU\"\n\t\t});\n\t\tconst data = await response.data;\n\t\tsetCountry(data);\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<GoogleMap\n\t\t\tdefaultZoom={4}\n\t\t\tdefaultCenter={{lat: 26.4831, lng: 80.33333}}\n\t\t>\n\t\t\t{country.map((res, i) => {\n\t\t\t\tconst {countryInfo, cases} = res;\n\t\t\t\tconst {long, lat, _id} = countryInfo;\n\t\t\t\treturn (\n\t\t\t\t\t<Marker key={_id} position={{lat: lat, lng: long}}/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</GoogleMap>\n\t);\n});\nexport default CoVidWorldMapComponent;\n"]},"metadata":{},"sourceType":"module"}