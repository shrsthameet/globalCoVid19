{"version":3,"sources":["component/HeaderComponent.js","ContextAPI/CoVidCaseContext.js","reusableComponents/CardComponent.js","component/CoVidCasesComponent.js","ContextAPI/CovVidByCountryContext.js","component/CountrySearchFormComponent.js","component/CountryCoVidDataComponent.js","component/CountryCoVidDataLoading.js","component/CoVidDataByCountryComponent.js","container/CoVidInfoContainer.js","component/CoVidWorldMapComponent.js","ContextAPI/CoVidWorldDataContext.js","component/CoVidWorldDataComponent.js","component/LoadingPageComponent.js","container/MainPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","avatar","size","src","title","CoVidCaseContext","createContext","API_PATH","API_KEY","CoVidCaseContextProvider","props","useState","coVidCases","setCoVidCases","isLoading","setIsLoading","a","axios","method","url","headers","res","data","useEffect","fetchCoVidCase","console","log","Provider","value","children","CardComponent","cases","color","image","textColor","cardStyle","background","border","borderRadius","textAlign","span","hoverable","style","alt","height","width","marginBottom","valueStyle","CoVidCasesComponent","useContext","total_cases","total_deaths","total_recovered","new_cases","gutter","marginTop","CoVidByCountryContext","CoVidByCountryContextProvider","countryStat","setCountryStat","country","get","result","latest_stat_by_country","fetchData","CountrySearchFormComponent","form","Item","name","rules","required","message","placeholder","autoComplete","suffix","SearchOutlined","shouldUpdate","float","type","htmlType","disabled","isFieldsTouched","getFieldsError","filter","errors","length","padding","CountryCoVidDataComponent","map","active_cases","margin","CountryCoVidDataLoading","CoVidDataByCountryComponent","show","setShow","useForm","forceUpdate","onFinish","values","initialValues","remember","CoVidInfoContainer","CoVidWorldMapComponent","compose","withProps","googleMapURL","loadingElement","containerElement","mapElement","withScriptjs","withGoogleMap","setCountry","response","defaultZoom","defaultCenter","lat","lng","i","countryInfo","long","_id","key","position","CoVidWorldDataContext","columns","dataIndex","render","countryFlag","CoVidWorldDataContextProvider","worldData","setWorldData","fetchCoVidWorldData","resData","flag","countryName","totalCases","activeCases","active","totalDeaths","deaths","recovered","criticalCases","critical","CoVidWorldDataComponent","dataSource","pagination","pageSize","scroll","y","LoadingPageComponent","justify","tip","MainPageContainer","xs","sm","md","lg","xl","xxl","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0eb27fe4.chunk.js","sourcesContent":["import React from \"react\";\nimport {PageHeader} from \"antd\";\n\nconst HeaderComponent = () => {\n\treturn (\n\t\t<>\n\t\t\t<PageHeader\n\t\t\t\tavatar={\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 'large',\n\t\t\t\t\t\tsrc: 'https://images.unsplash.com/flagged/photo-1584036561584-b03c19da874c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttitle=\"Global COVID-19 Cases\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default HeaderComponent;\n","import React, {useState, createContext, useEffect} from \"react\";\nimport axios from \"axios\";\n\nexport const CoVidCaseContext = createContext();\n\nconst API_PATH = `https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php`;\nconst API_KEY = {\n\t\"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n\t\"x-rapidapi-key\": \"9fed399570msh663b031bcdef2b4p1c0023jsnb006081f81ed\"\n};\n\nconst CoVidCaseContextProvider = (props) => {\n\tconst [coVidCases, setCoVidCases] = useState({});\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tasync function fetchCoVidCase() {\n\t\tsetIsLoading(true);\n\t\tconst res = await axios({\n\t\t\tmethod: \"get\",\n\t\t\turl: `${API_PATH}`,\n\t\t\theaders: API_KEY\n\t\t});\n\t\tconst data = res.data;\n\t\tsetCoVidCases(data);\n\t\tsetIsLoading(false);\n\t}\n\n\n\tuseEffect(() => {\n\t\tfetchCoVidCase();\n\t}, []);\n\n\tconsole.log(coVidCases)\n\n\treturn (\n\t\t<CoVidCaseContext.Provider value={{coVidCases, isLoading}}>\n\t\t\t{props.children}\n\t\t</CoVidCaseContext.Provider>\n\t);\n};\n\nexport default CoVidCaseContextProvider;\n","import React from \"react\";\nimport {Col, Card, Statistic} from \"antd\";\n\nconst CardComponent = (props) => {\n\tconst {title, cases, color, image, textColor} = props;\n\n\tconst cardStyle = {\n\t\tbackground: color,\n\t\tborder: \"none\",\n\t\tborderRadius: 3,\n\t\ttextAlign: \"center\",\n\t\t// marginTop: 20\n\t};\n\n\treturn (\n\t\t<Col span={12}>\n\t\t\t<Card hoverable style={cardStyle}\n\t\t\t>\n\t\t\t\t<img src={`${image}`} alt='totalCase' style={{height: 50, width: 50, marginBottom: 10}}/>\n\t\t\t\t<Statistic\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tvalue={cases}\n\t\t\t\t\tvalueStyle={{color: textColor}}\n\t\t\t\t\t// prefix={<img src='/images/patient.png' alt='totalCase' style={{height: 30, width: 30}} />}\n\t\t\t\t\t// suffix=\"%\"\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</Col>\n\t);\n};\n\nexport default CardComponent;\n","import React, {useContext} from \"react\";\nimport {CoVidCaseContext} from \"../ContextAPI/CoVidCaseContext\";\n\nimport {Row} from \"antd\";\nimport CardComponent from \"../reusableComponents/CardComponent\";\n\nconst CoVidCasesComponent = () => {\n\tconst {coVidCases} = useContext(CoVidCaseContext);\n\tconst {total_cases, total_deaths, total_recovered, new_cases} = coVidCases;\n\tconsole.log('cases',total_cases, total_deaths, total_recovered, new_cases);\n\treturn (\n\t\t<>\n\t\t\t<Row gutter={16}>\n\t\t\t\t<CardComponent\n\t\t\t\t\ttitle='Total Confirmed Cases'\n\t\t\t\t\tcases={total_cases}\n\t\t\t\t\tcolor='#e6f7ff'\n\t\t\t\t\timage='/images/patients.png'\n\t\t\t\t\ttextColor='#000000'\n\t\t\t\t/>\n\n\t\t\t\t<CardComponent\n\t\t\t\t\ttitle='Total Recovered Cases'\n\t\t\t\t\tcases={total_recovered}\n\t\t\t\t\tcolor='#eaff8f'\n\t\t\t\t\timage='/images/recovered.png'\n\t\t\t\t\ttextColor='#000000'\n\t\t\t\t/>\n\t\t\t</Row>\n\n\t\t\t<Row gutter={16} style={{marginBottom: 20, marginTop: 10}}>\n\t\t\t\t<CardComponent\n\t\t\t\t\ttitle='Total Deaths'\n\t\t\t\t\tcases={total_deaths}\n\t\t\t\t\tcolor='#f5222d'\n\t\t\t\t\timage='/images/totalDeaths.png'\n\t\t\t\t\ttextColor='#ffffff'\n\t\t\t\t/>\n\n\t\t\t\t<CardComponent\n\t\t\t\t\ttitle='New Cases'\n\t\t\t\t\tcases={new_cases}\n\t\t\t\t\tcolor='#b5f5ec'\n\t\t\t\t\timage='/images/people.png'\n\t\t\t\t\ttextColor='#000000'\n\t\t\t\t/>\n\t\t\t</Row>\n\n\t\t</>\n\n\t);\n};\n\nexport default CoVidCasesComponent;\n","import React, {createContext, useState} from \"react\";\nimport axios from \"axios\";\n\nexport const CoVidByCountryContext = createContext();\n\nconst CoVidByCountryContextProvider = (props) => {\n\tconst [countryStat, setCountryStat] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\n\tasync function fetchData(country) {\n\t\tsetIsLoading(true);\n\t\tconst result = await axios\n\t\t\t.get(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php?country=${country}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n\t\t\t\t\t\"x-rapidapi-key\": \"9fed399570msh663b031bcdef2b4p1c0023jsnb006081f81ed\"\n\t\t\t\t}\n\t\t\t},);\n\t\tsetCountryStat(result.data.latest_stat_by_country);\n\t\tsetIsLoading(false);\n\t}\n\n\treturn (\n\t\t<CoVidByCountryContext.Provider value={{fetchData, countryStat, isLoading}}>\n\t\t\t{props.children}\n\t\t</CoVidByCountryContext.Provider>\n\t);\n};\n\nexport default CoVidByCountryContextProvider;\n","import React from \"react\";\nimport {Button, Form, Input} from \"antd\";\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst CountrySearchFormComponent = (props) => {\n\tconst {form} = props;\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"country\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input your country!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tsize='large'\n\t\t\t\t\tplaceholder='Search for your country'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tsuffix={<SearchOutlined />}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item shouldUpdate>\n\t\t\t\t{() => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{float: \"right\"}}\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t!form.isFieldsTouched(true) ||\n\t\t\t\t\t\t\tform.getFieldsError().filter(({errors}) => errors.length).length\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n};\n\nexport default CountrySearchFormComponent;\n","import React from \"react\";\nimport {Row, Col, Statistic, Spin} from \"antd\";\n\nconst cardStyle = {\n\tbackground: \"#ffffff\",\n\tpadding: 25,\n\ttextAlign: \"center\",\n\tborder: \"1px solid #D3D3D3\"\n};\n\nconst CountryCoVidDataComponent = (props) => {\n\tconst {countryStat, isLoading} = props;\n\treturn (\n\t\t<Row style={cardStyle}>\n\t\t\t{countryStat.map(data => {\n\t\t\t\tconst {total_cases, active_cases, total_deaths, total_recovered} = data;\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t\t<Spin style={{margin: \"auto\"}} size='large'/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t<Statistic title='Total Cases' value={`${total_cases}` || 0}/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t<Statistic title=\"Active Cases\" value={active_cases}/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t<Statistic title=\"Total Deaths\" value={total_deaths}/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t<Statistic title=\"Total Recovered\" value={total_recovered}/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Row>\n\t);\n};\n\nexport default CountryCoVidDataComponent;\n","import React from \"react\";\nimport {Row, Col, Statistic} from \"antd\";\n\nconst cardStyle = {\n\tbackground: \"#ffffff\",\n\tpadding: 30,\n\ttextAlign: \"center\",\n\tborder: \"1px solid #D3D3D3\"\n};\n\nconst CountryCoVidDataLoading = () => {\n\treturn (\n\t\t<Row style={cardStyle}>\n\t\t\t<Col span={6}>\n\t\t\t\t<Statistic title='Total Cases' value={0}/>\n\t\t\t</Col>\n\t\t\t<Col span={6}>\n\t\t\t\t<Statistic title=\"Active Cases\" value={0}/>\n\t\t\t</Col>\n\t\t\t<Col span={6}>\n\t\t\t\t<Statistic title=\"Total Deaths\" value={0}/>\n\t\t\t</Col>\n\t\t\t<Col span={6}>\n\t\t\t\t<Statistic title=\"Total Recovered\" value={0}/>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default CountryCoVidDataLoading;\n","import React, {useEffect, useState, useContext} from \"react\";\n\nimport {Form, Col} from \"antd\";\nimport {CoVidByCountryContext} from \"../ContextAPI/CovVidByCountryContext\";\nimport CountrySearchFormComponent from \"./CountrySearchFormComponent\";\nimport CountryCoVidDataComponent from \"./CountryCoVidDataComponent\";\nimport CountryCoVidDataLoading from \"./CountryCoVidDataLoading\";\n\n\nconst CoVidDataByCountryComponent = () => {\n\tconst [show, setShow] = useState(false);\n\tconst {fetchData, countryStat, isLoading} = useContext(CoVidByCountryContext);\n\tconst [form] = Form.useForm();\n\tconst [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n\tuseEffect(() => {\n\t\tforceUpdate({});\n\t}, []);\n\n\tconst handleSubmit = (values) => {\n\t\tconst country = values.country;\n\t\tfetchData(country);\n\t\tsetShow(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{/*<Title level={4}>Search your country</Title>*/}\n\t\t\t<Col>\n\t\t\t\t<Form form={form} onFinish={handleSubmit} initialValues={{remember: true}}>\n\t\t\t\t\t<CountrySearchFormComponent form={form}/>\n\t\t\t\t</Form>\n\t\t\t\t{show ? (<CountryCoVidDataComponent isLoading={isLoading} countryStat={countryStat}/>\n\t\t\t\t) : (<CountryCoVidDataLoading/>)}\n\t\t\t</Col>\n\n\t\t</>\n\t);\n};\n\nexport default CoVidDataByCountryComponent;\n","import React from \"react\";\nimport HeaderComponent from \"../component/HeaderComponent\";\nimport CoVidCasesComponent from \"../component/CoVidCasesComponent\";\nimport CoVidDataByCountryComponent from \"../component/CoVidDataByCountryComponent\";\n\nconst CoVidInfoContainer = () => {\n\treturn (\n\t\t<>\n\t\t\t<HeaderComponent/>\n\t\t\t<CoVidCasesComponent/>\n\t\t\t<CoVidDataByCountryComponent/>\n\t\t</>\n\t);\n};\n\nexport default CoVidInfoContainer;\n","import React, {useState, useEffect} from \"react\";\nimport {\n\twithScriptjs,\n\twithGoogleMap,\n\tGoogleMap,\n\tMarker\n} from \"react-google-maps\";\nimport {compose, withProps} from \"recompose\";\nimport axios from \"axios\";\n\nconst CoVidWorldMapComponent = compose(\n\twithProps({\n\t\tgoogleMapURL:\n\t\t\t\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB7exZMUKU7pPZifDhZq1x3qplK1Cxk6AE&v=3.exp&libraries=geometry,drawing,places\",\n\t\tloadingElement: <div style={{height: `100%`}}/>,\n\t\tcontainerElement: <div style={{height: `53vh`}}/>,\n\t\tmapElement: <div style={{height: `100%`}}/>\n\t}),\n\twithScriptjs,\n\twithGoogleMap\n)(() => {\n\tconst [country, setCountry] = useState([]);\n\n\t// Fetching API\n\tasync function fetchData() {\n\t\tconst response = await axios({\n\t\t\tmethod: \"GET\",\n\t\t\turl:\n\t\t\t\t\"https://corona.lmao.ninja/countries?fbclid=IwAR3mzozGuX74TDJ4YIJ-wTJgMW1Gzmdinq5-Qfqtad80LQuW2Hh1zdxfuUU\"\n\t\t});\n\t\tconst data = await response.data;\n\t\tsetCountry(data);\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<GoogleMap\n\t\t\tdefaultZoom={4}\n\t\t\tdefaultCenter={{lat: 26.4831, lng: 80.33333}}\n\t\t>\n\t\t\t{country.map((res, i) => {\n\t\t\t\tconst {countryInfo, cases} = res;\n\t\t\t\tconst {long, lat, _id} = countryInfo;\n\t\t\t\treturn (\n\t\t\t\t\t<Marker key={_id} position={{lat: lat, lng: long}}/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</GoogleMap>\n\t);\n});\nexport default CoVidWorldMapComponent;\n","import React, {createContext, useState, useEffect} from \"react\";\nimport axios from \"axios\";\n\nexport const CoVidWorldDataContext = createContext();\n\nconst columns = [\n\t{\n\t\ttitle: \"\",\n\t\tdataIndex: \"countryFlag\",\n\t\t// width: 80,\n\t\trender: (countryFlag) => <img style={{height: 20, width: 40}} src={countryFlag} alt={countryFlag}/>\n\t},\n\t{\n\t\ttitle: \"Country Name\",\n\t\tdataIndex: \"countryName\",\n\t\t// width: 150,\n\t},\n\t{\n\t\ttitle: \"Total Cases\",\n\t\tdataIndex: \"totalCases\",\n\t\t// width: 150,\n\t},\n\t{\n\t\ttitle: \"Active Cases\",\n\t\tdataIndex: \"activeCases\",\n\t},\n\t{\n\t\ttitle: \"Total Deaths\",\n\t\tdataIndex: \"totalDeaths\",\n\t},\n\t{\n\t\ttitle: \"Recovered\",\n\t\tdataIndex: \"recovered\",\n\t},\n\t{\n\t\ttitle: \"Critical Cases\",\n\t\tdataIndex: \"criticalCases\",\n\t},\n];\n\nconst CoVidWorldDataContextProvider = (props) => {\n\tconst [worldData, setWorldData] = useState([{countryInfo: {}}]);\n\n\tasync function fetchCoVidWorldData() {\n\t\tconst response = await axios.get(\"https://corona.lmao.ninja/countries?fbclid=IwAR3AEMVx3jWFDfm-mXxEWtvHZhd_4enAWLc5ynMB5fBFKvFYFWjcgODVVPY\");\n\t\tconst data = await response.data;\n\t\tsetWorldData(data);\n\t}\n\n\tuseEffect(() => {\n\t\tfetchCoVidWorldData();\n\t}, []);\n\n\tconst coVidFilterData = worldData.filter(resData => resData.country !== \"World\");\n\n\tconst data = coVidFilterData.map(res => {\n\t\treturn (\n\t\t\t{\n\t\t\t\tcountryFlag: res.countryInfo.flag,\n\t\t\t\tcountryName: res.country,\n\t\t\t\ttotalCases: res.cases,\n\t\t\t\tactiveCases: res.active,\n\t\t\t\ttotalDeaths: res.deaths,\n\t\t\t\trecovered: res.recovered,\n\t\t\t\tcriticalCases: res.critical\n\t\t\t}\n\t\t);\n\t});\n\n\n\treturn (\n\t\t<CoVidWorldDataContext.Provider value={{columns, data}}>\n\t\t\t{props.children}\n\t\t</CoVidWorldDataContext.Provider>\n\t);\n};\n\nexport default CoVidWorldDataContextProvider;\n","import React, {useContext} from \"react\";\nimport {Table} from \"antd\";\nimport {CoVidWorldDataContext} from \"../ContextAPI/CoVidWorldDataContext\";\n\nconst CoVidWorldDataComponent = () => {\n\tconst {columns, data} = useContext(CoVidWorldDataContext);\n\treturn (\n\t\t<>\n\t\t\t<Table\n\t\t\t\tstyle={{marginTop: 10}}\n\t\t\t\t// bordered\n\t\t\t\tcolumns={columns}\n\t\t\t\tdataSource={data}\n\t\t\t\tpagination={{pageSize: 50}}\n\t\t\t\tscroll={{y: 240}}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default CoVidWorldDataComponent;\n","import React from \"react\";\nimport {Row, Col, Spin} from \"antd\";\n\nconst LoadingPageComponent = () => {\n\treturn (\n\t\t<Row type='flex' justify='center'>\n\t\t\t<Col>\n\t\t\t\t<Spin\n\t\t\t\t\tstyle={{marginTop: '45vh'}}\n\t\t\t\t\tsize='large'\n\t\t\t\t\ttip=\"World COVID-19 Cases Tracker\"\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default LoadingPageComponent;\n","import React, {useContext} from \"react\";\nimport {Col, Row} from \"antd\";\nimport CoVidInfoContainer from \"./CoVidInfoContainer\";\nimport CoVidWorldMapComponent from \"../component/CoVidWorldMapComponent\";\nimport CoVidWorldDataComponent from \"../component/CoVidWorldDataComponent\";\nimport LoadingPageComponent from \"../component/LoadingPageComponent\";\nimport {CoVidCaseContext} from \"../ContextAPI/CoVidCaseContext\";\n\n\nconst MainPageContainer = () => {\n\tconst {isLoading} = useContext(CoVidCaseContext);\n\treturn (\n\t\t<>\n\t\t\t{isLoading ? <LoadingPageComponent/> : (\n\t\t\t\t<>\n\t\t\t\t\t<Row gutter={8}>\n\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={15} xl={15} xxl={15}>\n\t\t\t\t\t\t\t<CoVidWorldMapComponent/>\n\t\t\t\t\t\t\t<CoVidWorldDataComponent/>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={9} xl={9} xxl={9}>\n\t\t\t\t\t\t\t<CoVidInfoContainer/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t</>\n\t);\n};\n\nexport default MainPageContainer;\n","import React from 'react';\nimport MainPageContainer from \"./container/MainPageContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPageContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CoVidCaseContextProvider from \"./ContextAPI/CoVidCaseContext\";\nimport CoVidByCountryContextProvider from \"./ContextAPI/CovVidByCountryContext\";\nimport CoVidWorldDataContextProvider from \"./ContextAPI/CoVidWorldDataContext\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CoVidCaseContextProvider>\n\t\t\t<CoVidWorldDataContextProvider>\n\t\t\t\t<CoVidByCountryContextProvider>\n\t\t\t\t\t<App/>\n\t\t\t\t</CoVidByCountryContextProvider>\n\t\t\t</CoVidWorldDataContextProvider>\n\t\t</CoVidCaseContextProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}